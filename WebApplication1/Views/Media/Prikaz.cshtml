@using WebApplication1.ViewModels
@using ClassLibrary1.Model;
@using Microsoft.AspNetCore.Identity
@{
    //Layout = null;
    var wishlisted = false;
}
@model List<MediaVM>
@inject UserManager<AppUser> UserManager
<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Prikaz</title>
</head>
<body>
    <input id="searchInput" type="search" class="light-table-filter" data-table="table" placeholder="Search...">
    <table class="table" style="table-layout:fixed;">
        <thead>
            <tr>
                <td>Thumbnail</td>
                <td>Media Name</td>
                <td>Watchlist</td>
                @if (User.IsInRole("Admin"))
                {
                    <td>Option</td>
                }
            </tr>
        </thead>
        <tbody>
            @foreach (MediaVM x in Model)
            {
                wishlisted = false;
            <tr>
                <td>
                    <a asp-controller="Media" asp-action="PrikazDetaljno" asp-route-MediaID="@x.MediaID">
                        @*<img src="~/uploads/@x.Thumbnail.ImageUniqueFilename" alt="@x.Thumbnail.ImageCaption" style="width:30%;max-width:30%" />*@
                        <img src="~/uploads/@x.Thumbnail.ImageUniqueFilename" alt="@x.Thumbnail.ImageCaption" style="width:100px;max-width:100px; object-fit:cover;" />
                    </a>
                </td>
                <td><a asp-controller="Media" asp-action="PrikazDetaljno" asp-route-MediaID="@x.MediaID">@x.MediaName</a></td>
                @if (UserManager.GetUserId(User) != null)
                {
                    foreach (var w in x.WatchLists)
                    {
                        if (w.MediaID == x.MediaID && w.UserID == UserManager.GetUserId(User))
                        {
                            wishlisted = true;
                        }
                    }
                    if (wishlisted == true)
                    {
                        <td >@Html.ActionLink("Remove from watchlist", "Ukloni", "WatchListMedia", new { MediaID = x.MediaID, UserID = UserManager.GetUserId(User) }, null)</td>
                    }
                    else
                    {
                        <td>@Html.ActionLink("Add to Watchlist", "DodajNaListu", "WatchListMedia", new { MediaID = x.MediaID, UserID = UserManager.GetUserId(User) }, null)</td>
                    }
                }
                @if (User.IsInRole("Admin"))
                {
                    <td>
                        <a asp-controller="Media" asp-action="UrediForma" asp-route-MediaID="@x.MediaID" class="btn btn-sm">Edit</a>
                        @*<a asp-controller="Media" asp-action="Brisanje" asp-route-MediaID="@x.MediaID">Delete</a>*@
                        @using (Html.BeginForm("Brisanje", "Media", new { MediaID = x.MediaID }, FormMethod.Post, null, htmlAttributes: new { @class = "form-horizontal" }))
                        {
                            @Html.AntiForgeryToken()
                            <button type="submit" class="btn btn-sm">Delete</button>
                        }
                    </td>
                }
                @if (UserManager.GetUserId(User) == null)
                {
                    <td>Please log in.</td>
                }
            </tr>
            }
        </tbody>
    </table>
</body>
</html>
<style>
    thead {
        border-bottom: 2px solid #343a40;
        font-weight: 900;
    }

    #searchInput {
        background-position: 10px 12px;
        background-repeat: no-repeat;
        width: 100%;
        font-size: 16px;
        padding: 12px 20px 12px 40px;
        border: 1px solid #ddd;
        margin-bottom: 12px;
    }

        #searchInput:focus {
            outline: none;
        }

    .form-horizontal {
        display: inline;
    }
</style>
<script>
    //table filter
    (function (document) {
        'use strict';

        var TableFilter = (function (Arr) {

            var _input;

            function _onInputEvent(e) {
                _input = e.target;
                var tables = document.getElementsByClassName(_input.getAttribute('data-table'));
                Arr.forEach.call(tables, function (table) {
                    Arr.forEach.call(table.tBodies, function (tbody) {
                        Arr.forEach.call(tbody.rows, _filter);
                    });
                });
            }

            function _filter(row) {
                var text = row.textContent.toLowerCase(), val = _input.value.toLowerCase();
                row.style.display = text.indexOf(val) === -1 ? 'none' : 'table-row';
            }

            return {
                init: function () {
                    var inputs = document.getElementsByClassName('light-table-filter');
                    Arr.forEach.call(inputs, function (input) {
                        input.oninput = _onInputEvent;
                    });
                }
            };
        })(Array.prototype);

        document.addEventListener('readystatechange', function () {
            if (document.readyState === 'complete') {
                TableFilter.init();
            }
        });

    })(document);
</script>