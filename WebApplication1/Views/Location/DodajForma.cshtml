
@{
    //Layout = null;
}
@model WebApplication1.ViewModels.AddLocationVM
<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>DodajForma</title>
</head>
<body>
    <form action="/Location/SnimiForma" method="post">
        @Html.AntiForgeryToken()
        <input asp-for="LocationID" style="display: none" />

        <div class="form-group">
            <label>Location Name</label>
            <input class="form-control" asp-for="LocationName" />
            <span asp-validation-for="LocationName" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label>City</label>
            <select class="form-control" asp-for="CityID" asp-items="Model.CityStavke" id="citySelect">
                <option></option>
            </select>
            <span asp-validation-for="CityID" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label>Description</label><br />
            @Html.TextAreaFor(model => model.Description, new { style = "resize: none;", @class = "form-control", @rows = 8, @cols = 70 })
            <span asp-validation-for="Description" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label>Latitude</label>
            <input class="form-control" asp-for="Latitude" id="latLon" />
            <span asp-validation-for="Latitude" class="text-danger" id="latLon"></span>
        </div>
        <div class="form-group">
            <label>Longitude</label>
            <input class="form-control" asp-for="Longitude" id="latLon" />
            <span asp-validation-for="Longitude" class="text-danger" id="latLon"></span>
        </div>
        <input type="submit" class="btn btn-primary" id="submitButton"/>
    </form>
</body>
</html>
<style>
    #submitButton {
        background-color: #343a40;
    }
</style>
<script>
    //$.validator.methods.number = function (value, element) {
    //    return this.optional(element) || /^-?(?:\d+|\d{1,3}(?:[\s\.,]\d{3})+)(?:[\.,]\d+)?$/.test(value);
    //}

    //$.validator.methods.range = function (value, element, param) {
    //    var globalizedValue = value.replace(",", ".");
    //    return this.optional(element) || (globalizedValue >= param[0] && globalizedValue <= param[1]);
    //}

    $(function () {
        var select = $('#citySelect');
        select.html(select.find('option').sort(function (x, y) {
            // to change to descending order switch "<" for ">"
            return $(x).text() > $(y).text() ? 1 : -1;
        }));
    });
</script>